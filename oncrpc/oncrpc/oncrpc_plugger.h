/* =========================================================================

                           ONCRPC_PLUGGER.H

GENERAL DESCRIPTION
  This is an AUTO GENERATED file that exports the API for this RPC module.

 Copyright (c) 2005 Qualcomm Technologies, Inc.  All Rights Reserved.  
 Qualcomm Technologies Proprietary and Confidential.
============================================================================ */

/* =========================================================================

                              Edit History

                             AUTO GENERATED 

Modified by rpconvert_h.pl version:
RPConvert Id: rpconvert_h.pl,v 1.13 2005/01/20 00:59:14 vparadka Exp 
$Id: //linux/pkgs/proprietary/oncrpc/main/source/oncrpc/oncrpc_plugger.h#3 $
============================================================================ */

/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ONCRPC_PLUGGER_H_RPCGEN
#define _ONCRPC_PLUGGER_H_RPCGEN

#include "oncrpc.h"


#ifdef __cplusplus
extern "C" {
#endif

#define ONCRPC_PLUGGER_TCP_TRANS 0x00000001
#define ONCRPC_PLUGGER_UDP_TRANS 0x00000002
#define ONCRPC_PLUGGER_DIAG_TRANS 0x00000004
#define ONCRPC_PLUGGER_SIO_TRANS 0x00000008
#define ONCRPC_PLUGGER_SM_TRANS 0x00000010
#define ONCRPC_PLUGGER_RTR_TRANS 0x00000020
#define ONCRPC_PLUGGER_LO_TRANS 0x00000040

struct oncrpc_plugger_prog_args {
	u_int prog;
	u_int vers;
	u_int xport_mask;
};
typedef struct oncrpc_plugger_prog_args oncrpc_plugger_prog_args;

struct oncrpc_plugger_add_args {
	u_int prog;
	u_int vers;
	u_int dispatch_offset;
	u_int *proxy_offset;
	u_int *boot_offset;
	struct {
		u_int prog_code_len;
		char *prog_code_val;
	} prog_code;
};
typedef struct oncrpc_plugger_add_args oncrpc_plugger_add_args;

struct oncrpc_plugger_list_struct {
	struct oncrpc_plugger_list_struct *next;
	u_int prog;
	u_int vers;
	u_int xport_mask;
};
typedef struct oncrpc_plugger_list_struct oncrpc_plugger_list_struct;

typedef oncrpc_plugger_list_struct *oncrpc_plugger_list;

#ifdef __cplusplus
}
#endif

#ifdef FEATURE_ONCRPC_PLUGGER

#ifdef __cplusplus
extern "C" {
#endif

#define ONCRPC_PLUGGER_VERS ONCRPC_PLUGGER_0

#define ONCRPC_PLUGGER_APP 0x2FFFFFFF
#define ONCRPC_PLUGGER_0 0

#if defined(__STDC__) || defined(__cplusplus)
#define oncrpc_plugger_null 0
#ifdef FEATURE_ONCRPC_CLNT
extern  enum clnt_stat oncrpc_plugger_null_0(void *, CLIENT *, clnt_call_cb, void *);
#endif /* FEATURE_ONCRPC_CLNT */
extern  void * oncrpc_plugger_null_0_svc(void *, struct svc_req *);
#define oncrpc_plugger_list_all 1
#ifdef FEATURE_ONCRPC_CLNT
extern  enum clnt_stat oncrpc_plugger_list_all_0(void *, CLIENT *, clnt_call_cb, void *);
#endif /* FEATURE_ONCRPC_CLNT */
extern  oncrpc_plugger_list * oncrpc_plugger_list_all_0_svc(void *, struct svc_req *);
#define oncrpc_plugger_register_all 2
#ifdef FEATURE_ONCRPC_CLNT
extern  enum clnt_stat oncrpc_plugger_register_all_0(u_int *, CLIENT *, clnt_call_cb, void *);
#endif /* FEATURE_ONCRPC_CLNT */
extern  void * oncrpc_plugger_register_all_0_svc(u_int *, struct svc_req *);
#define oncrpc_plugger_deregister_all 3
#ifdef FEATURE_ONCRPC_CLNT
extern  enum clnt_stat oncrpc_plugger_deregister_all_0(u_int *, CLIENT *, clnt_call_cb, void *);
#endif /* FEATURE_ONCRPC_CLNT */
extern  void * oncrpc_plugger_deregister_all_0_svc(u_int *, struct svc_req *);
#define oncrpc_plugger_register_prog 4
#ifdef FEATURE_ONCRPC_CLNT
extern  enum clnt_stat oncrpc_plugger_register_prog_0(oncrpc_plugger_prog_args *, CLIENT *, clnt_call_cb, void *);
#endif /* FEATURE_ONCRPC_CLNT */
extern  void * oncrpc_plugger_register_prog_0_svc(oncrpc_plugger_prog_args *, struct svc_req *);
#define oncrpc_plugger_deregister_prog 5
#ifdef FEATURE_ONCRPC_CLNT
extern  enum clnt_stat oncrpc_plugger_deregister_prog_0(oncrpc_plugger_prog_args *, CLIENT *, clnt_call_cb, void *);
#endif /* FEATURE_ONCRPC_CLNT */
extern  void * oncrpc_plugger_deregister_prog_0_svc(oncrpc_plugger_prog_args *, struct svc_req *);
#define oncrpc_plugger_add_prog 6
#ifdef FEATURE_ONCRPC_CLNT
extern  enum clnt_stat oncrpc_plugger_add_prog_0(oncrpc_plugger_add_args *, CLIENT *, clnt_call_cb, void *);
#endif /* FEATURE_ONCRPC_CLNT */
extern  u_int * oncrpc_plugger_add_prog_0_svc(oncrpc_plugger_add_args *, struct svc_req *);
#define oncrpc_plugger_remove_prog 7
#ifdef FEATURE_ONCRPC_CLNT
extern  enum clnt_stat oncrpc_plugger_remove_prog_0(u_int *, CLIENT *, clnt_call_cb, void *);
#endif /* FEATURE_ONCRPC_CLNT */
extern  bool_t * oncrpc_plugger_remove_prog_0_svc(u_int *, struct svc_req *);
extern int oncrpc_plugger_app_0_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define oncrpc_plugger_null 0
extern  void * oncrpc_plugger_null_0();
extern  void * oncrpc_plugger_null_0_svc();
#define oncrpc_plugger_list_all 1
extern  oncrpc_plugger_list * oncrpc_plugger_list_all_0();
extern  oncrpc_plugger_list * oncrpc_plugger_list_all_0_svc();
#define oncrpc_plugger_register_all 2
extern  void * oncrpc_plugger_register_all_0();
extern  void * oncrpc_plugger_register_all_0_svc();
#define oncrpc_plugger_deregister_all 3
extern  void * oncrpc_plugger_deregister_all_0();
extern  void * oncrpc_plugger_deregister_all_0_svc();
#define oncrpc_plugger_register_prog 4
extern  void * oncrpc_plugger_register_prog_0();
extern  void * oncrpc_plugger_register_prog_0_svc();
#define oncrpc_plugger_deregister_prog 5
extern  void * oncrpc_plugger_deregister_prog_0();
extern  void * oncrpc_plugger_deregister_prog_0_svc();
#define oncrpc_plugger_add_prog 6
extern  u_int * oncrpc_plugger_add_prog_0();
extern  u_int * oncrpc_plugger_add_prog_0_svc();
#define oncrpc_plugger_remove_prog 7
extern  bool_t * oncrpc_plugger_remove_prog_0();
extern  bool_t * oncrpc_plugger_remove_prog_0_svc();
extern int oncrpc_plugger_app_0_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_oncrpc_plugger_prog_args (XDR *, oncrpc_plugger_prog_args*);
extern  bool_t xdr_oncrpc_plugger_add_args (XDR *, oncrpc_plugger_add_args*);
extern  bool_t xdr_oncrpc_plugger_list_struct (XDR *, oncrpc_plugger_list_struct*);
extern  bool_t xdr_oncrpc_plugger_list (XDR *, oncrpc_plugger_list*);

#else /* ! __STDC__ || __cplusplus */
extern bool_t xdr_oncrpc_plugger_prog_args ();
extern bool_t xdr_oncrpc_plugger_add_args ();
extern bool_t xdr_oncrpc_plugger_list_struct ();
extern bool_t xdr_oncrpc_plugger_list ();

#endif /* __STDC__ || __cplusplus */

#ifdef __cplusplus
}
#endif

void oncrpc_plugger_app_init( void );
void oncrpc_plugger_app_server_init( void );
void oncrpc_plugger_app_client_init( void );
void oncrpc_plugger_freeret_reg( void (*)(void *, char *),void *);
#endif /* FEATURE_ONCRPC_PLUGGER */
#endif /* _ONCRPC_PLUGGER_H_RPCGEN */
